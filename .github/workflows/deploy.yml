name: Spring Boot CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-app
          path: target/*.jar

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-boot-app
          path: target/

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=latest
          REPO_URI=123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/my-springboot-app
          docker build -t $REPO_URI:$IMAGE_TAG .
          docker push $REPO_URI:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/springboot-app
